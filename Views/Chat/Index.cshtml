@model Tuple<List<ChatManager.Models.User>, List<ChatManager.Models.ChatMessage>>

@{
    ViewBag.Title = "ChatRoom";
}



<div style="display: grid; grid-template-columns: 65px auto; align-items: center;">
    <img src="~/favicon.png" style="width: 56px;" />
    <h3>Salle de discussions</h3>
</div>

<div class="main">
    <div style="display: grid; grid-template-columns: 60px auto; column-gap: 10px;">
        <div class="friendsListContainer" id="friendListContainer">
            @{
                foreach (var item in Model.Item1)
                {
                    bool showNotif = false;

                        

                    if (ChatManager.Models.OnlineUsers.GetSessionUser() != item)
                    {
                        <div class="unselectedTarget" title="@item.FirstName @item.LastName" data-user-id="@item.Id">
                            @Helper.AvatarUser(item, "UserSmallAvatar", true)

                            @{
                                if (showNotif)
                                {
                                    <div id="unread" class="icon fa fa-d smallerIcon">

                                    </div>
                                }
                            }

                        </div>
                                    }
                                }
            }

        </div>
        <div>
            <div class="messagesPanel" id="messagePanel">
                <div class="messagesHeader">
                    <h4 id="Selected">Sélectionnez un ami.</h4>
                </div>

                <div id="messageBody">
                    @{
                        int nbMessages = 0;
                        foreach (var message in Model.Item2)
                        {
                            nbMessages++;
                            if (nbMessages == 1)
                            {
                                <div class="messageTime">
                                    @message.Date
                                </div>
                            }

                            if (message.Sender == ChatManager.Models.OnlineUsers.GetSessionUser().Id)
                            {

                                <div class="sentLayout">

                                    <div class="sent" id="sent_@message.Id" title="@message.Date">
                                        @Helper.ParseContent(message.Message)
                                    </div>
                                </div>
                                <div class="editMessage" style="display:block" id="edit_@message.Id">
                                    <input class="sent form-control" value="@message.Message" />
                                    <span id="update_@message.Id" style="display:inline;" class="icon fa fa-check smallerIcon" title="Modifier ce message" data-placement="bottom">
                                    </span>
                                    @Helper.IconConfirmCmdWithParam("Chat", "DeleteMessage", message.Id, "fa-times smallerIcon", "Effacer ce message", "bottom")

                                </div>

                            }
                            else
                            {
                                <div class="receivedLayout">
                                    <div class="received" id="received_@message.Id" title="@message.Date">
                                        @Helper.ParseContent(message.Message)

                                    </div>
                                </div>

                            }

                        }
                    }

                </div>



            </div>
            <div class="sendMessageLayout">
                <input id="message" class="form-control" style="width:100% !important; max-width:1000px !important;" placeholder="Tapez votre message ici ..." title="Les urls d'image sont prises en compte.">
                <span id="send" class="icon fa fa-paper-plane" title="Envoyer" data-placement="bottom"></span>
            </div>
        </div>
    </div>
</div>






@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script defer>

        $("#message").hide();
        $("#send").hide();

        // MESSAGE FUNCTIONS

        function SendMessage(userId) {
            var message = $("#message").val();
            if (message != null && message.trim().length > 0) {
                //sending the message
                $.ajax({
                    url: "/Chat/SendMessage",
                    type: "POST",
                    data: { id: userId, message: message },
                    success: function (response) {
                        console.log("Message sent: " + message);
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        console.log("Error sending message: " + errorThrown);
                    }
                });
                // Clear the message input
                $("#message").val("");
            }

           
        }

        function DeleteMessage(id) {
            //var confirmationMessage = "Effacer ce message?";
            //var confirmed = confirm(confirmationMessage);
            //if (confirmed) {
            //    $.ajax({
            //        url: "/Chat/DeleteMessage",
            //        type: "POST",
            //        data: { id: id },
            //        success: function (response) {
            //            var messageSent = $("#sent_" + id);
            //            messageSent.remove();
            //        },
            //        error: function (xhr, textStatus, errorThrown) {
            //            console.log("Error editing message: " + errorThrown);
            //        }
            //    });
            //}

        }

        function EditMessage(id, editedMessage) {
            console.log(editedMessage);
            $.ajax({
                url: "/Chat/EditMessage",
                type: "POST",
                data: { id: id, message: editedMessage },
                success: function (response) {
                    console.log(response);

                    var messageSent = $("#sent_" + id);
                    messageSent.show();
                    $("#sent_" + id).text(editedMessage)
                    ShowMessages($(".selectedTarget").data("user-id"), $('.selectedTarget'));
                    if (editedMessage.length > 30) {
                        $("#sent_" + id).addClass("truncate-text");
                        $("#sent_" + id).attr("title", editedMessage)
                    } else {
                        $("#sent_" + id).removeClass("truncate-text");
                    }
                },
                error: function (xhr, textStatus, errorThrown) {
                    console.log("Error editing message: " + errorThrown);
                }
            });
        }

        function ShowEditMessage(message) {

            var id = message.attr("id").replace("sent_", "");
            var edit = $("#edit_" + id);
            message.hide();
            edit.show();

            var update = $("#update_" + id);
            var remove = $("#delete_" + id);

            update.click(function () {
                var editedMessage = edit.find('.sent').val();
                EditMessage(id, editedMessage);
                edit.hide();
            });

            //remove.click(function () {
            //    DeleteMessage(id);
            //    edit.hide();
            //    var messageSent = $("#sent_" + id);
            //    if (messageSent) {
            //        messageSent.show();
            //    }
            //})
        }

        function ShowMessages(userId, div) {
            var currentEditedDiv = $("div.editMessage[style*='display: block']").first();
            var editText = "";

            if (currentEditedDiv.length > 0) {

                editText = currentEditedDiv.find("input").val();
            }


            if (!userId || !div || div.length <= 0) {
                console.log("EMPTY")
                $("#messageBody").find(".sent").remove();
                $("#messageBody").find(".received").remove();
                $("#messageBody").find(".messageTime").remove();

                UpdateMessageHeader(null);

            }
            else {
                $.ajax({
                    url: "/Chat/GetMessages",
                    type: "GET",
                    data: { id: userId },
                    success: function (updatedMessages) {
                        $("#messageBody").html($(updatedMessages).find('#messageBody').html());
                        $(".editMessage").hide();

                        $(".sent").click(function () {
                            if (!$(this).hasClass("form-control")) {
                                $(".editMessage").hide();
                                $(".sent").show();

                                ShowEditMessage($(this));
                            }
                        })

                        if (currentEditedDiv.length > 0) {
                            var editId = currentEditedDiv.attr("id").replace("edit_", "");

                            ShowEditMessage($("#sent_" + editId))

                            var editInput = $("div.editMessage[style*='display: block']").first().find('input');
                            //editInput.focus();
                            editInput.val(editText);
                        }

                    },
                    error: function (xhr, textStatus, errorThrown) {
                        console.log("Error sending message: " + errorThrown);
                    }
                });
                UpdateMessageHeader(div);
            }
        }

        function HideFriendBorder() {
            $('.selectedTarget').each(function () {
                $(this).removeClass("selectedTarget");
                $(this).addClass("unselectedTarget");
            });
        }

        function ShowSelectedFriend(name, avatar) {
            var $contentContainer = $("<div>").addClass("avatar-content-container");
            avatar.css("display", "inline-block");
            avatar.css("margin-top", "10px");

            $contentContainer.append(avatar);
            //$contentContainer.append($("<div>").text(" " + name));
            var div = $("<span>").addClass("ellipsis");

            div.text(" " + name);

            $contentContainer.append(div);

            $("#Selected").empty().append("Conversation avec ", $contentContainer);

            $("#message").show();
            $("#send").show();
        }

        function UpdateMessageHeader(div) {
            if (div) {
                HideFriendBorder();

                div.addClass("selectedTarget");
                div.removeClass("unselectedTarget");
                div.find("#unread").hide();

                //update header
                var avatarClone = div.find(".UserSmallAvatar").clone();
                avatarClone.removeClass("UserSmallAvatar");
                avatarClone.addClass("UserMediumAvatar");

                var friendName = div.attr("title");

                ShowSelectedFriend(friendName, avatarClone);
            }
            else {
                $("#Selected").empty();
                $("#Selected").text("Sélectionnez un ami");
            }
        }

        function UpdateMessages() {
            var selected = $(".selectedTarget");
            var userId = 0;

            if (selected) {
                userId = $(".selectedTarget").data("user-id");
            }

            ShowMessages(userId, selected);
        }

        function UpdateFriendsList() {

            $.ajax({
                url: "/Chat/GetFriendsList",
                type: "GET",
                data: {},
                success: function (updatedList) {
                    var currentSelectedId = $(".selectedTarget").data("user-id");

                    $(".friendsListContainer").html($(updatedList).find('.friendsListContainer').html());

                    var selectedUser = $(".friendsListContainer").find("[data-user-id='" + currentSelectedId + "']");

                    if (selectedUser.length > 0) {

                        selectedUser.addClass("selectedTarget");
                    }


                    $(".unselectedTarget").click(function () {
                        UpdateMessageHeader($(this));
                        var userId = $(".selectedTarget").data("user-id");
                        ShowMessages(userId, $(this));
                    })

                    UpdateMessages();

                    
                },
                error: function (xhr, textStatus, errorThrown) {
                    console.log("Error sending message: " + errorThrown);
                }
            });

        }

        $(".unselectedTarget").click(function () {
            UpdateMessageHeader($(this));
            var userId = $(".selectedTarget").data("user-id");
            ShowMessages(userId, $(this));
        })

        $("#send").click(function () {
            var userId = $(".selectedTarget").data("user-id");

            SendMessage(userId);
            ShowMessages(userId, $('.selectedTarget'));
        })


        $(document).keydown(function (event) {
            if (event.keyCode === 27) {
                $("#message").val("");
            }
            if (event.keyCode === 13) {
                var userId = $(".selectedTarget").data("user-id");

                SendMessage(userId);
                ShowMessages(userId, $('.selectedTarget'));
            }
        });

       // PARTIAL REFRESH

        window.setInterval(function () {
            UpdateFriendsList();
            //UpdateMessages();
        }, 5000);
    </script>
}