@model IEnumerable<ChatManager.Models.User>

@{
    ViewBag.Title = "Index";
}

<div style="display: grid; grid-template-columns: 65px auto; align-items: center;">
    <img src="~/friendships.png" style="width: 56px;" />
    <h3>Gestion des amitiés</h3>
</div>

<hr />
<div style="display: grid; grid-template-columns: 295px 35px; align-items: center;">
    <input type="search" id="Search" placeholder="Recherche" class="form-control" />
    <span id="SearchButton" class="icon fa fa-search" style="padding-left: 10px;"></span>
</div>
<div class="friendfilters">
    <input type="checkbox" id="FilterNotFriend" class="filter" checked />
    <label for="FilterNotFriend" class="fa green fa-plus-circle" title="Afficher/Masqer les usagers qui ne sont pas encore ami avec vous."></label>
    <input type="checkbox" id="FilterRequest" class="filter" checked />
    <label for="FilterRequest" class="fa green fa-check" title="Afficher/Masqer les usagers qui vous ont envoyé une demande d'ami."></label>
    <input type="checkbox" id="FilterPending" class="filter" checked />
    <label for="FilterPending" class="fa green fa-clock-o" title="Afficher/Masqer les usagers a qui vous avez envoyé une demande d'ami"></label>
    <input type="checkbox" id="FilterFriend" class="filter" checked />
    <label for="FilterFriend" class="fa green fa-check-circle" title="Afficher/Masqer les usagers qui sont ami avec vous."></label>
    <input type="checkbox" id="FilterDenied" class="filter" checked />
    <label for="FilterDeclined" class="fa red fa-times-circle" title="Afficher/Masqer les usagers qui vous ont bloqué."></label>
    <input type="checkbox" id="FilterBlocked" class="filter" checked />
    <label for="FilterBlocked" class="fa red fa-ban" title="Afficher/Masqer les usagers qui vous ont bloqué."></label>
</div>
<hr />

<div id="friendshipsListContainer">
    @foreach (var item in Model)
    {
        if (ChatManager.Models.OnlineUsers.GetSessionUser() != item)
        {
            <div class="friendContainer">
                <a href="mailto:@item.Email" title="Compte créé le @item.CreationDate">
                    @Helper.AvatarUser(item, "UserSmallAvatar")
                </a>
                @Helper.OnLineStatusIcon(ChatManager.Models.OnlineUsers.IsOnLine(item.Id))
                
                @{
                    if (@ViewBag.Friendships == 0)
                    {
                        <a href="/Friendships/SendFriendshipRequest/@item.Id">
                            <span class="fa green fa-plus-circle icon" title="Envoyer une demande d'ami à @item.GetFullName(false)"></span>
                        </a>
                    }
                    /*else if (item.Status == 1)
                    {
                        <a href="/Friendships/AcceptFriendshipRequest/@item.Id">
                            <div style="display:inline;">
                                <span class="fa green fa-clock-o icon" title="En attente de  @item.GetFullName(false)"></span>
                                <span class="fa red fa-times icon" title="Retirer la demande d'ami à @item.GetFullName(false)"></span>
                            </div>
                        </a>
                    }
                    else if (item.Status == 2)
                    {
                        <a href="/Friendships/AcceptFriendshipRequest/@item.Id">
                            <div style="display:inline;">
                                <span class="fa green fa-check icon" title="Accepter la demande d'ami de @item.GetFullName(false)"></span>
                                <span class="fa red fa-times icon" title="Refuser la demande d'ami de @item.GetFullName(false)"></span>
                            </div>
                        </a>
                    }
                    else if (item.Status == 3)
                    {
                        <a href="/Friendships/AcceptFriendshipRequest/@item.Id">
                            <div style="display:grid">
                                <span class="fa green fa-check-circle icon" title="Accepter la demande d'ami de @item.GetFullName(false)"></span>
                                <a href="/Friendships/RemoveFriendship/@item.Id">
                                    <span class="fa red fa-times-circle icon" title="Envoyer une demande d'ami à @item.GetFullName()"></span>
                                </a>
                            </div>
                        </a>
                    }
                    else if (item.Status == 4)
                    {
                        <a href="/Friendships/SendFriendshipRequest/@item.Id">
                            <span class="fa red fa-times-circle icon" title="Envoyer une demande d'ami à @item.GetFullName()"></span>
                        </a>
                    }
                    else
                    {
                        <a href="/Friendships/SendFriendshipRequest/@item.Id">
                            <span class="fa red fa-ban icon" title="Envoyer une demande d'ami à @item.GetFullName()"></span>
                        </a>
                    }*/
                }
            </div>
        }
    }
</div>




@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script defer>
        let status = new PartialRefresh("/Friendships/GetFriendShipsStatus", "friendshipsListContainer", 5, UpdatefriendShipsCallback)
        $("#SearchButton").click(() => {
            var searchText = $("#Search").val().toLowerCase();

            $('#friendshipsListContainer .friendContainer').each(function () {
                var name = $(this).text().toLowerCase();
                if (name.includes(searchText)) {
                    $(this).show();
                } else {
                    $(this).hide();
                }
            });
        });


        $('#filter_NotFriend').click(function () {
            friendShipsStatus.command("/Friendships/SetFilterNotFriend?check=" + $(this).is(':checked'));
        })


        function UpdatefriendShipsCallback() {
            $(".command").click(function () {
                var url = $(this).attr("url");
                var message = $(this).attr("message");
                friendShipsStatus.confirmedCommand(message, url);
            });

        }
</script>
}
